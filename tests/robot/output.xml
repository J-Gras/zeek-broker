<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.9 on darwin)" generated="20220430 17:14:49.448" rpa="false" schemaversion="2">
<suite id="s1" name="Web-Socket" source="/Users/neverlord/corelight/project/broker/tests/robot/web-socket">
<suite id="s1-s1" name="WebSocketClients" source="/Users/neverlord/corelight/project/broker/tests/robot/web-socket/WebSocketClients.robot">
<test id="s1-s1-t1" name="Clients Receive Events From Other Clients">
<kw name="Start Node" type="SETUP">
<doc>Starts the Broker Node.</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${coutFile}</var>
<arg>stdout.broker-node.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220430 17:14:49.492" level="INFO">${coutFile} = stdout.broker-node.txt</msg>
<status status="PASS" starttime="20220430 17:14:49.492" endtime="20220430 17:14:49.492"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${cerrFile}</var>
<arg>stderr.broker-node.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220430 17:14:49.492" level="INFO">${cerrFile} = stderr.broker-node.txt</msg>
<status status="PASS" starttime="20220430 17:14:49.492" endtime="20220430 17:14:49.492"/>
</kw>
<kw name="Start Process" library="Process">
<var>${hdl}</var>
<arg>${brokerNodeBin}</arg>
<arg>--verbose</arg>
<arg>--broker.web-socket.port\=${webSocketPort}</arg>
<arg>--topics\=["web-socket-test"]</arg>
<arg>stdout=${coutFile}</arg>
<arg>stderr=${cerrFile}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20220430 17:14:49.493" level="INFO">Starting process:
/Users/neverlord/corelight/build/broker/asan/bin/broker-node --verbose --broker.web-socket.port=2244 --topics=[\"web-socket-test\"]</msg>
<msg timestamp="20220430 17:14:49.497" level="INFO">${hdl} = 1</msg>
<status status="PASS" starttime="20220430 17:14:49.492" endtime="20220430 17:14:49.497"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${brokerNodeProc}</arg>
<arg>${hdl}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220430 17:14:49.498" level="INFO">${brokerNodeProc} = 1</msg>
<status status="PASS" starttime="20220430 17:14:49.497" endtime="20220430 17:14:49.498"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.491" endtime="20220430 17:14:49.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Connect producer and consumer to the WebSocket server.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.499" level="INFO">Connect producer and consumer to the WebSocket server.</msg>
<status status="PASS" starttime="20220430 17:14:49.498" endtime="20220430 17:14:49.499"/>
</kw>
<kw name="Connect To Node">
<var>${producerSock}</var>
<doc>Connects to broker-node on the configured URL.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<var>${conn}</var>
<arg>10 sec</arg>
<arg>250 msec</arg>
<arg>Do WebSocket Connect</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Do WebSocket Connect">
<doc>Connects to the WebSocket URL and returns the connection.</doc>
<kw name="Log" library="BuiltIn">
<arg>Try to connect to ${webSocketUrl}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.500" level="INFO">Try to connect to ws://localhost:2244/v1/events/json</msg>
<status status="PASS" starttime="20220430 17:14:49.500" endtime="20220430 17:14:49.500"/>
</kw>
<kw name="Connect" library="WebSocketClient">
<var>${fd}</var>
<arg>${webSocketUrl}</arg>
<msg timestamp="20220430 17:14:49.504" level="FAIL">ConnectionRefusedError: [Errno 61] Connection refused</msg>
<status status="FAIL" starttime="20220430 17:14:49.500" endtime="20220430 17:14:49.505"/>
</kw>
<status status="FAIL" starttime="20220430 17:14:49.499" endtime="20220430 17:14:49.505"/>
</kw>
<kw name="Do WebSocket Connect">
<doc>Connects to the WebSocket URL and returns the connection.</doc>
<kw name="Log" library="BuiltIn">
<arg>Try to connect to ${webSocketUrl}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.758" level="INFO">Try to connect to ws://localhost:2244/v1/events/json</msg>
<status status="PASS" starttime="20220430 17:14:49.757" endtime="20220430 17:14:49.758"/>
</kw>
<kw name="Connect" library="WebSocketClient">
<var>${fd}</var>
<arg>${webSocketUrl}</arg>
<msg timestamp="20220430 17:14:49.760" level="INFO">${fd} = &lt;websocket._core.WebSocket object at 0x104ce69a0&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.758" endtime="20220430 17:14:49.760"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.757" endtime="20220430 17:14:49.760"/>
</kw>
<msg timestamp="20220430 17:14:49.760" level="INFO">${conn} = &lt;websocket._core.WebSocket object at 0x104ce69a0&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.499" endtime="20220430 17:14:49.760"/>
</kw>
<msg timestamp="20220430 17:14:49.760" level="INFO">${producerSock} = &lt;websocket._core.WebSocket object at 0x104ce69a0&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.499" endtime="20220430 17:14:49.760"/>
</kw>
<kw name="Connect To Node">
<var>${consumerSock}</var>
<doc>Connects to broker-node on the configured URL.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<var>${conn}</var>
<arg>10 sec</arg>
<arg>250 msec</arg>
<arg>Do WebSocket Connect</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Do WebSocket Connect">
<doc>Connects to the WebSocket URL and returns the connection.</doc>
<kw name="Log" library="BuiltIn">
<arg>Try to connect to ${webSocketUrl}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.761" level="INFO">Try to connect to ws://localhost:2244/v1/events/json</msg>
<status status="PASS" starttime="20220430 17:14:49.761" endtime="20220430 17:14:49.761"/>
</kw>
<kw name="Connect" library="WebSocketClient">
<var>${fd}</var>
<arg>${webSocketUrl}</arg>
<msg timestamp="20220430 17:14:49.763" level="INFO">${fd} = &lt;websocket._core.WebSocket object at 0x104d4ea00&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.761" endtime="20220430 17:14:49.763"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.761" endtime="20220430 17:14:49.763"/>
</kw>
<msg timestamp="20220430 17:14:49.763" level="INFO">${conn} = &lt;websocket._core.WebSocket object at 0x104d4ea00&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.761" endtime="20220430 17:14:49.763"/>
</kw>
<msg timestamp="20220430 17:14:49.763" level="INFO">${consumerSock} = &lt;websocket._core.WebSocket object at 0x104d4ea00&gt;</msg>
<status status="PASS" starttime="20220430 17:14:49.760" endtime="20220430 17:14:49.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Send the filters to the server.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.764" level="INFO">Send the filters to the server.</msg>
<status status="PASS" starttime="20220430 17:14:49.763" endtime="20220430 17:14:49.764"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${producerFilter}</var>
<arg>/Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/filter.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220430 17:14:49.764" level="INFO" html="true">Getting file '&lt;a href="file:///Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/filter.json"&gt;/Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/filter.json&lt;/a&gt;'.</msg>
<msg timestamp="20220430 17:14:49.764" level="INFO">${producerFilter} = ["web-socket-test"]
</msg>
<status status="PASS" starttime="20220430 17:14:49.764" endtime="20220430 17:14:49.764"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${consumerFilter}</var>
<arg>/Users/neverlord/corelight/project/broker/tests/robot/web-socket/consumer-1/filter.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220430 17:14:49.764" level="INFO" html="true">Getting file '&lt;a href="file:///Users/neverlord/corelight/project/broker/tests/robot/web-socket/consumer-1/filter.json"&gt;/Users/neverlord/corelight/project/broker/tests/robot/web-socket/consumer-1/filter.json&lt;/a&gt;'.</msg>
<msg timestamp="20220430 17:14:49.765" level="INFO">${consumerFilter} = ["web-socket-test"]
</msg>
<status status="PASS" starttime="20220430 17:14:49.764" endtime="20220430 17:14:49.765"/>
</kw>
<kw name="Send" library="WebSocketClient">
<arg>${producerSock}</arg>
<arg>${producerFilter}</arg>
<status status="PASS" starttime="20220430 17:14:49.765" endtime="20220430 17:14:49.765"/>
</kw>
<kw name="Send" library="WebSocketClient">
<arg>${consumerSock}</arg>
<arg>${consumerFilter}</arg>
<status status="PASS" starttime="20220430 17:14:49.765" endtime="20220430 17:14:49.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Receive the ACK on both WebSocket connections.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.766" level="INFO">Receive the ACK on both WebSocket connections.</msg>
<status status="PASS" starttime="20220430 17:14:49.766" endtime="20220430 17:14:49.766"/>
</kw>
<kw name="Recv" library="WebSocketClient">
<var>${producerAck}</var>
<arg>${producerSock}</arg>
<msg timestamp="20220430 17:14:49.766" level="INFO">${producerAck} = {"type": "ack", "endpoint": "c2ea7039-ca89-54f6-91b0-4e2f559f048d", "version": "2.2.0-22"}</msg>
<status status="PASS" starttime="20220430 17:14:49.766" endtime="20220430 17:14:49.766"/>
</kw>
<kw name="Recv" library="WebSocketClient">
<var>${consumerAck}</var>
<arg>${consumerSock}</arg>
<msg timestamp="20220430 17:14:49.767" level="INFO">${consumerAck} = {"type": "ack", "endpoint": "c2ea7039-ca89-54f6-91b0-4e2f559f048d", "version": "2.2.0-22"}</msg>
<status status="PASS" starttime="20220430 17:14:49.766" endtime="20220430 17:14:49.767"/>
</kw>
<kw name="Should Be An Ack Message">
<arg>${producerAck}</arg>
<doc>Checks whether the argument is an ACK message.</doc>
<kw name="Get Message Type">
<var>${msgType}</var>
<arg>${inputStr}</arg>
<doc>Parses a node response and extracts only the type.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${input}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.769" level="INFO">${input} = {'type': 'ack', 'endpoint': 'c2ea7039-ca89-54f6-91b0-4e2f559f048d', 'version': '2.2.0-22'}</msg>
<status status="PASS" starttime="20220430 17:14:49.767" endtime="20220430 17:14:49.769"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${res}</var>
<arg>${input}</arg>
<arg>type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220430 17:14:49.770" level="INFO">${res} = ack</msg>
<status status="PASS" starttime="20220430 17:14:49.770" endtime="20220430 17:14:49.770"/>
</kw>
<msg timestamp="20220430 17:14:49.770" level="INFO">${msgType} = ack</msg>
<status status="PASS" starttime="20220430 17:14:49.767" endtime="20220430 17:14:49.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msgType}</arg>
<arg>ack</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220430 17:14:49.770" endtime="20220430 17:14:49.770"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.767" endtime="20220430 17:14:49.770"/>
</kw>
<kw name="Should Be An Ack Message">
<arg>${consumerAck}</arg>
<doc>Checks whether the argument is an ACK message.</doc>
<kw name="Get Message Type">
<var>${msgType}</var>
<arg>${inputStr}</arg>
<doc>Parses a node response and extracts only the type.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${input}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.771" level="INFO">${input} = {'type': 'ack', 'endpoint': 'c2ea7039-ca89-54f6-91b0-4e2f559f048d', 'version': '2.2.0-22'}</msg>
<status status="PASS" starttime="20220430 17:14:49.771" endtime="20220430 17:14:49.771"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${res}</var>
<arg>${input}</arg>
<arg>type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220430 17:14:49.771" level="INFO">${res} = ack</msg>
<status status="PASS" starttime="20220430 17:14:49.771" endtime="20220430 17:14:49.772"/>
</kw>
<msg timestamp="20220430 17:14:49.772" level="INFO">${msgType} = ack</msg>
<status status="PASS" starttime="20220430 17:14:49.771" endtime="20220430 17:14:49.772"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msgType}</arg>
<arg>ack</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220430 17:14:49.772" endtime="20220430 17:14:49.772"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.770" endtime="20220430 17:14:49.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Send all messages for the publisher.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.772" level="INFO">Send all messages for the publisher.</msg>
<status status="PASS" starttime="20220430 17:14:49.772" endtime="20220430 17:14:49.772"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${messagesStr}</var>
<arg>/Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/send.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220430 17:14:49.773" level="INFO" html="true">Getting file '&lt;a href="file:///Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/send.json"&gt;/Users/neverlord/corelight/project/broker/tests/robot/web-socket/producer-1/send.json&lt;/a&gt;'.</msg>
<msg timestamp="20220430 17:14:49.773" level="INFO">${messagesStr} = {
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@dat...</msg>
<status status="PASS" starttime="20220430 17:14:49.773" endtime="20220430 17:14:49.773"/>
</kw>
<kw name="Split String" library="String">
<var>${messages}</var>
<arg>${messagesStr}</arg>
<arg>NEXT_MESSAGE</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20220430 17:14:49.773" level="INFO">${messages} = ['{\n  "@type": "data-message",\n  "topic": "web-socket-test",\n  "data": {\n    "@data-type": "vector",\n    "data": [\n      {\n        "@data-type": "count",\n        "data": 1\n      },\n      {\n...</msg>
<status status="PASS" starttime="20220430 17:14:49.773" endtime="20220430 17:14:49.773"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@dat...</var>
<kw name="Send" library="WebSocketClient">
<arg>${producerSock}</arg>
<arg>${message}</arg>
<status status="PASS" starttime="20220430 17:14:49.774" endtime="20220430 17:14:49.774"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.773" endtime="20220430 17:14:49.774"/>
</iter>
<iter>
<var name="${message}">
{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@da...</var>
<kw name="Send" library="WebSocketClient">
<arg>${producerSock}</arg>
<arg>${message}</arg>
<status status="PASS" starttime="20220430 17:14:49.774" endtime="20220430 17:14:49.774"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.774" endtime="20220430 17:14:49.774"/>
</iter>
<iter>
<var name="${message}">
{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@da...</var>
<kw name="Send" library="WebSocketClient">
<arg>${producerSock}</arg>
<arg>${message}</arg>
<status status="PASS" starttime="20220430 17:14:49.775" endtime="20220430 17:14:49.775"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.774" endtime="20220430 17:14:49.775"/>
</iter>
<status status="PASS" starttime="20220430 17:14:49.773" endtime="20220430 17:14:49.775"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>Receive messages at the consumer.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.775" level="INFO">Receive messages at the consumer.</msg>
<status status="PASS" starttime="20220430 17:14:49.775" endtime="20220430 17:14:49.775"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@dat...</var>
<kw name="Recv" library="WebSocketClient">
<var>${found}</var>
<arg>${consumerSock}</arg>
<msg timestamp="20220430 17:14:49.776" level="INFO">${found} = {"@type": "data-message", "type": "event", "topic": "web-socket-test", "data": {"@data-type": "vector", "data": [{"@data-type": "count", "data": 1}, {"@data-type": "count", "data": 1}, {"@data-type": ...</msg>
<status status="PASS" starttime="20220430 17:14:49.775" endtime="20220430 17:14:49.776"/>
</kw>
<kw name="Parse Json Input">
<var>${foundDict}</var>
<arg>${found}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.776" level="INFO">${res} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.776" endtime="20220430 17:14:49.776"/>
</kw>
<msg timestamp="20220430 17:14:49.777" level="INFO">${foundDict} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.776" endtime="20220430 17:14:49.777"/>
</kw>
<kw name="Parse Json Input">
<var>${messageDict}</var>
<arg>${message}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.777" level="INFO">${res} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.777" endtime="20220430 17:14:49.777"/>
</kw>
<msg timestamp="20220430 17:14:49.777" level="INFO">${messageDict} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.777" endtime="20220430 17:14:49.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${messageDict}</arg>
<arg>type=event</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220430 17:14:49.778" endtime="20220430 17:14:49.778"/>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<arg>${foundDict}</arg>
<arg>${messageDict}</arg>
<doc>Fails if the given dictionaries are not equal.</doc>
<status status="PASS" starttime="20220430 17:14:49.778" endtime="20220430 17:14:49.778"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.775" endtime="20220430 17:14:49.778"/>
</iter>
<iter>
<var name="${message}">
{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@da...</var>
<kw name="Recv" library="WebSocketClient">
<var>${found}</var>
<arg>${consumerSock}</arg>
<msg timestamp="20220430 17:14:49.778" level="INFO">${found} = {"@type": "data-message", "type": "event", "topic": "web-socket-test", "data": {"@data-type": "vector", "data": [{"@data-type": "count", "data": 1}, {"@data-type": "count", "data": 1}, {"@data-type": ...</msg>
<status status="PASS" starttime="20220430 17:14:49.778" endtime="20220430 17:14:49.778"/>
</kw>
<kw name="Parse Json Input">
<var>${foundDict}</var>
<arg>${found}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.779" level="INFO">${res} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.779" endtime="20220430 17:14:49.779"/>
</kw>
<msg timestamp="20220430 17:14:49.779" level="INFO">${foundDict} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.779" endtime="20220430 17:14:49.779"/>
</kw>
<kw name="Parse Json Input">
<var>${messageDict}</var>
<arg>${message}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.780" level="INFO">${res} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.780" endtime="20220430 17:14:49.780"/>
</kw>
<msg timestamp="20220430 17:14:49.780" level="INFO">${messageDict} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.779" endtime="20220430 17:14:49.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${messageDict}</arg>
<arg>type=event</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220430 17:14:49.780" endtime="20220430 17:14:49.780"/>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<arg>${foundDict}</arg>
<arg>${messageDict}</arg>
<doc>Fails if the given dictionaries are not equal.</doc>
<status status="PASS" starttime="20220430 17:14:49.780" endtime="20220430 17:14:49.781"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.778" endtime="20220430 17:14:49.781"/>
</iter>
<iter>
<var name="${message}">
{
  "@type": "data-message",
  "topic": "web-socket-test",
  "data": {
    "@data-type": "vector",
    "data": [
      {
        "@data-type": "count",
        "data": 1
      },
      {
        "@da...</var>
<kw name="Recv" library="WebSocketClient">
<var>${found}</var>
<arg>${consumerSock}</arg>
<msg timestamp="20220430 17:14:49.782" level="INFO">${found} = {"@type": "data-message", "type": "event", "topic": "web-socket-test", "data": {"@data-type": "vector", "data": [{"@data-type": "count", "data": 1}, {"@data-type": "count", "data": 1}, {"@data-type": ...</msg>
<status status="PASS" starttime="20220430 17:14:49.781" endtime="20220430 17:14:49.782"/>
</kw>
<kw name="Parse Json Input">
<var>${foundDict}</var>
<arg>${found}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.782" level="INFO">${res} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.782" endtime="20220430 17:14:49.782"/>
</kw>
<msg timestamp="20220430 17:14:49.783" level="INFO">${foundDict} = {'@type': 'data-message', 'type': 'event', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': ...</msg>
<status status="PASS" starttime="20220430 17:14:49.782" endtime="20220430 17:14:49.783"/>
</kw>
<kw name="Parse Json Input">
<var>${messageDict}</var>
<arg>${message}</arg>
<doc>Converts JSON input to a dictionary.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${res}</var>
<arg>json.loads('''${inputStr}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220430 17:14:49.783" level="INFO">${res} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.783" endtime="20220430 17:14:49.783"/>
</kw>
<msg timestamp="20220430 17:14:49.783" level="INFO">${messageDict} = {'@type': 'data-message', 'topic': 'web-socket-test', 'data': {'@data-type': 'vector', 'data': [{'@data-type': 'count', 'data': 1}, {'@data-type': 'count', 'data': 1}, {'@data-type': 'vector', 'data':...</msg>
<status status="PASS" starttime="20220430 17:14:49.783" endtime="20220430 17:14:49.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${messageDict}</arg>
<arg>type=event</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220430 17:14:49.783" endtime="20220430 17:14:49.784"/>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<arg>${foundDict}</arg>
<arg>${messageDict}</arg>
<doc>Fails if the given dictionaries are not equal.</doc>
<status status="PASS" starttime="20220430 17:14:49.784" endtime="20220430 17:14:49.784"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.781" endtime="20220430 17:14:49.784"/>
</iter>
<status status="PASS" starttime="20220430 17:14:49.775" endtime="20220430 17:14:49.784"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>Disconnect sockets.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220430 17:14:49.784" level="INFO">Disconnect sockets.</msg>
<status status="PASS" starttime="20220430 17:14:49.784" endtime="20220430 17:14:49.784"/>
</kw>
<kw name="Close" library="WebSocketClient">
<arg>${producerSock}</arg>
<status status="PASS" starttime="20220430 17:14:49.784" endtime="20220430 17:14:49.785"/>
</kw>
<kw name="Close" library="WebSocketClient">
<arg>${consumerSock}</arg>
<status status="PASS" starttime="20220430 17:14:49.785" endtime="20220430 17:14:49.785"/>
</kw>
<kw name="Stop Node" type="TEARDOWN">
<doc>Stops the Broker Node.</doc>
<kw name="Terminate Process" library="Process">
<arg>${brokerNodeProc}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20220430 17:14:49.786" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20220430 17:14:49.889" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20220430 17:14:49.786" endtime="20220430 17:14:49.890"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.785" endtime="20220430 17:14:49.890"/>
</kw>
<status status="PASS" starttime="20220430 17:14:49.491" endtime="20220430 17:14:49.890"/>
</test>
<status status="PASS" starttime="20220430 17:14:49.465" endtime="20220430 17:14:49.891"/>
</suite>
<status status="PASS" starttime="20220430 17:14:49.450" endtime="20220430 17:14:49.891"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Web-Socket">Web-Socket</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="WebSocketClients">Web-Socket.WebSocketClients</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
